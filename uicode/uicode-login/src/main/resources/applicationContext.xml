<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/task
		http://www.springframework.org/schema/task/spring-task-4.0.xsd
		">

    <!-- 数据库配置文件位置 -->
    <context:property-placeholder location="classpath:appconfig.xml" />

    <aop:aspectj-autoproxy proxy-target-class="true" />

    <!-- Activates annotation-based bean configuration -->
    <context:annotation-config />

    <!-- Scans for application @Components to deploy -->
    <context:component-scan base-package="zhyu.uicode.**.service" />

    <!-- 数据源 -->
    <bean id="defaulteDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="driverClassName" value="${dataSource.driverClassName}" />
        <property name="url" value="${dataSource.url}" />
        <property name="username" value="${dataSource.username}" />
        <property name="password" value="${dataSource.password}" />

        <!-- 初始化连接大小 -->
        <property name="initialSize" value="2" />
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="2" />
        <!-- 连接池最大使用连接数量 -->
        <property name="maxActive" value="100" />
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="60000" />

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000" />

        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000" />

        <property name="validationQuery" value="select 1 from dual" />
        <property name="testWhileIdle" value="true" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />

        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="poolPreparedStatements" value="false" />
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />

        <!-- 打开removeAbandoned功能 -->
        <property name="removeAbandoned" value="true" />
        <!-- 18000秒，也就是300分钟 -->
        <property name="removeAbandonedTimeout" value="18000" />
        <!-- 关闭abanded连接时输出错误日志 -->
        <property name="logAbandoned" value="true" />

        <!-- 监控数据库 -->
        <property name="filters" value="stat,log4j" />
        <property name="connectionProperties" value="druid.stat.slowSqlMillis=5000" />
    </bean>
    <!-- 输出可执行的SQL -->
    <bean id="log-filter" class="com.alibaba.druid.filter.logging.Log4jFilter">
        <property name="statementExecutableSqlLogEnable" value="true" />
    </bean>
    <!-- Mybatis session 工厂 -->
    <bean id="defaultSQLSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="defaulteDataSource" />
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>
        <property name="mapperLocations">
            <array>
                <!-- 				<value>classpath:com/tydic/**/model/mysql/*.xml</value> -->
                <value>classpath:zhyu/uicode/**/model/*.xml</value>
            </array>
        </property>
    </bean>

    <!-- Mybatis session 模板 -->
    <bean id="defaultSQLSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="defaultSQLSessionFactory" />
    </bean>

    <!-- 使用JDBC事物 -->
    <bean id="defaultTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="defaulteDataSource" />
    </bean>

    <!-- 使用annotation注解方式配置事务 -->
    <tx:annotation-driven transaction-manager="defaultTransactionManager" />

<!--    <bean class="com.tydic.common.spring.SpringBeanUtils" />

    <bean class="com.tydic.logger.LoggerServiceInterceptor" />-->

    <bean id="restTemplate" class="org.springframework.web.client.RestTemplate"/>
    <!-- 异常处理器-->
    <bean id="handlerExceptionResolver" class="zhyu.common.exceptionResolver.CommonExceptionResolver">
      <!--  <property name="defaultErrorView" value="error/500"/> --><!--错误页面-->
        <!--<property name="messageConverters">
            <list>
                <bean	class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />
                &lt;!&ndash; JSON转换器无需设置mediaType,由外部客户端调用时，手动设置相关mediaType &ndash;&gt;
                <bean	class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />
            </list>
        </property>-->
    </bean>
</beans>